<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="work.gaigeshen.springcloud.demo.eureka.provider.mapper.UserRoleMapper">
    <resultMap id="BaseResultMap" type="work.gaigeshen.springcloud.demo.eureka.provider.entity.UserRole">
        <id property="id" column="id"/>
        <result property="userId" column="user_id" />
        <result property="roleId" column="role_id" />
        <result property="createTime" column="create_time" />
    </resultMap>
    <sql id="BaseColumns">
        id, user_id, role_id, create_time
    </sql>
    <insert id="insert" keyProperty="id">
        insert into user_role (user_id, role_id, create_time) values (#{userId}, #{roleId}, #{createTime})
    </insert>
    <insert id="insertBatch" keyProperty="id">
        insert into user_role (user_id, role_id, create_time) values
        <foreach collection="userRoles" item="item" separator=",">
            <trim prefix="(" suffix=")">
                #{userId}, #{roleId}, #{createTime}
            </trim>
        </foreach>
    </insert>
    <insert id="insertSelective" keyProperty="id">
        <trim prefix="insert into user_role (" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="roleId != null">role_id,</if>
            <if test="createTime != null">create_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="roleId != null">#{roleId},</if>
            <if test="createTime != null">#{createTime},</if>
        </trim>
    </insert>
    <delete id="deleteById">
        delete from user_role where id = #{id}
    </delete>
    <delete id="deleteByUserId">
        delete from user_role where user_id = #{userId}
    </delete>
    <delete id="deleteByRoleId">
        delete from user_role where role_id = #{roleId}
    </delete>
    <update id="updateById">
        update user_role
        set user_id = #{userId},
            role_id = #{roleId},
            create_time = #{createTime}
        where id = #{id}
    </update>
    <update id="updateByIdSelective">
        update user_role
        <set>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="roleId != null">role_id = #{roleId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </set>
        where id = #{id}
    </update>
    <select id="selectById" resultMap="BaseResultMap">
        select
        <include refid="BaseColumns" />
        from user_role
        where id = #{id}
    </select>
    <select id="selectByUserId" resultMap="BaseResultMap">
        select
        <include refid="BaseColumns" />
        from user_role
        where user_id = #{userId}
    </select>
    <select id="selectByRoleId" resultMap="BaseResultMap">
        select
        <include refid="BaseColumns" />
        from user_role
        where role_id = #{roleId}
    </select>
</mapper>
